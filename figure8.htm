<html><head><title>Figure 8</title>
<script src="WAG.js"></script>
<script id="fboShader" type="x-shader/x-fragment">
//a map showing closest truck to pixel
precision mediump float;
uniform vec2 res;
uniform float time;
uniform vec2 t1;

vec2 path(float t,float i){t+=i;
  return vec2(cos(t/2.),sin(t))*20.*(vec2(1)+sin(vec2(i*.35,2.+i*.21))*.08);
}
void main(){
 vec2 U=25.*(2.*gl_FragCoord.xy-res)/res;
 float t=time*.5,dm=length(U-t1),c=31.,ff=.5;
 for(float i=0.;i<31.;i+=1.){
  float d=length(U-path(t,i));
  if(d<dm){dm=d;c=i;if(dm<2.)ff=.25;}
 }
 gl_FragColor=vec4(c,dm,t,ff);
}
</script>
<script id="fragShader" type="x-shader/x-fragment">
precision mediump float;
uniform sampler2D fbo;
uniform vec2 res;
uniform float time;
uniform vec2 t1,t0,c1;
float T=-1.,ff=.5;vec2 pos;mat2 wrm,brm;
vec2 path(float t,float i){t+=i;return vec2(cos(t/2.),sin(t))*20.*(vec2(1)+sin(vec2(i*.35,2.+i*.21))*.08);}
mat2 face(vec2 a){a=normalize(a);return mat2(a.y,-a.x,a.x,a.y);}
float trk(vec2 pG){pG=abs(pG);
  float d2=abs(pG.x*2.0-pG.y-pG.x*pG.x*0.69);
  float d3=abs(length(vec2((pG.x-0.7)*3.3333,pG.y))-1.0);
  return mix(d2,d3,smoothstep(0.55,0.66,pG.x));}
float GetT(vec2 p){vec4 O=texture2D(fbo,(vec2(25.)+p)/50.);
  if(T!=O.x){T=O.x;pos=(T==31.?t1:path(O.z,T));ff=O.w;
    vec2 p2=(T==31.?t1*2.-t0:path(O.z+.314159,T));
    brm=face(p2-pos);wrm=face(path(O.z+.6283,T)*brm-p2*brm);}
  float d=(trk(p/20.)-.4)*20.;
  return max(0.,min((O.y-70./res.y-1.)*.5,d));}
vec4 mcol=vec4(0);
float DE(vec3 p0){
  float st=sin(T);
  float AX=.33+st*.02,AZ=.5;
  float TW=.05,TR=.125,TS=.02;
  float BH=.1,BL=.75,BS=.04;
  p0.xz=(p0.xz-pos)*brm;p0.y-=TR;
  vec3 p=p0;p.xz=abs(p.xz)-vec2(AX,AZ);
  float yz=length(p.yz)-TR;
  if(p0.z>0.)p.xz=(p0.x>0.?p.xz*wrm:wrm*p.xz);
  float dT=length(max(vec2(abs(p.x)-TW,length(p.yz)-TR),0.0))-TS;
  float dB=length(max(vec3(abs(p0.x)-AX,abs(p0.y-BH)-BH+p0.z*0.01,abs(p0.z)-BL),0.0))-BS;
  float dP=max(abs(p0.x)-AX,max(abs(p0.y-BH-.14)-.2,abs(p0.z+BL*.6)-BL*.4));
  dB=min(dB,length(max(vec3(abs(p0.x)-AX+p0.y*0.1,abs(p0.y-BH*2.75)-BH,abs(p0.z-BL*.15+(p0.z>0.?p0.y-.23:0.))-BL*.3),0.))-BS)*.7;
  dB=max(dB,-min(p0.z>0.?yz-.05:dT-.05,dP));
  float d=min(dT,dB);
  if(mcol.x>0.){
    if(d==dT){
      if(p0.z>0.)yz=length(p.yz)-TR;
      mcol+=vec4(vec3(abs(sin(yz*16.+.52))*.5-yz*2.),0);
    }else{
      p=sin(p0*20.+2.4*sin(p0.zxy*17.));
      vec4 BC=abs(vec4(sin(T*1.3),st,sin(T+2.),.5+(p.x+p.y+p.z)*.1));
      BC.rgb+=p*.1;
      float ax=abs(p0.x)-AX+p0.y*0.1;
      if(ax<d){
        if(abs(p0.y-BH*3.-BS*.75)<BH-BS*.5){
          mcol+=vec4(.1,.1,.2,1);
        }else if(abs(p0.z)>BL){
          float lt=length(vec2(abs(p0.x)-.28,p0.y-.15));
          if(lt<.06){
            lt=sqrt(.06-lt)*5.;
            mcol+=(p0.z>0.?vec4(lt,lt,lt,2):vec4(lt,lt*.3,0,2));
          }else{
            if(abs(p0.x)<.22-p0.z*.1)mcol+=vec4(vec3(abs(sin(p0.y*61.+1.34))),.7);
            else mcol+=BC;}
        }else mcol+=BC;
      }else{
        if(abs(p0.y-BH*3.-BS*.75)<BH-BS*.5 && p0.z<.57-p0.y&& p0.z>-BL*.13){
          mcol+=vec4(.1,.1,.2,1);
        }else mcol+=BC;
      }}}return d*ff;}
vec3 normal(vec3 p, float d){
  vec2 e=vec2(d,-d);vec4 v=vec4(DE(p+e.xxx),DE(p+e.xyy),DE(p+e.yxy),DE(p+e.yyx));
  return normalize(2.*v.yzw+vec3(v.x-v.y-v.z-v.w));
}
float rand(vec2 p){return fract(sin(dot(p,vec2(13.3145,117.7391)))*4237.76543);}
float rnd;
void randomize(in vec2 p){rnd=rand(p+mod(time*10.,150.));}
float ShadAO(in vec3 ro, in vec3 rd){
 float t=0.01*rnd,s=1.0,d,mn=0.01;ff=1.;
 for(int i=0;i<12;i++){
  d=max(DE(ro+rd*t)*1.5,mn);
  s=min(s,d/t+t*0.5);
  t+=d;}return s;}
vec3 sky(vec3 rd, vec3 L){return vec3(1.-rd.y,0.9,1.+(rd.y-dot(rd,L))*.5)*(0.4*dot(rd,L)+0.6);}
vec3 bg(vec3 ro, vec3 rd, float t, vec3 L){
  if(rd.y<0. && t<250.){
    vec2 pG=ro.xz+rd.xz*t;
    float d3=trk(pG/20.),r1=rand(floor(pG*3.*(d3+.1))),r2=rand(floor(pG.yx*10.));
    return (mix(vec3(.4,.3,.1),vec3(.3,.4,.2),smoothstep(.2,.25,d3))
     +(r1*vec3(.0,.1,.2)+r2*vec3(.05))/(1.+.05*length(pG)))*(.5+.5*ShadAO(ro+rd*t,L));
  }else return sky(rd,L);}
vec3 scene(vec3 ro, vec3 rd){
  float t=GetT(ro.xz)*rnd,d,px=1./res.x;
  float dG=rd.y<0.?min(-ro.y/rd.y,250.):250.;
  for(int i=0;i<99;i++){
    t+=d=DE(ro+rd*t);
    if(t>dG || d<px*t)break;
    t+=GetT(ro.xz+rd.xz*t);
  }
  vec3 L=normalize(vec3(0.4,0.025,0.5));
  t=min(dG,t);
  vec3 col=bg(ro,rd,t,L);
  if(d<px*t*2.0){
    mcol=vec4(0.001);
    vec3 so=ro+rd*t;
    vec3 N=normal(so,d);
    vec4 scol=mcol*0.25;
    if(scol.w>1.5)col=scol.rgb;
    else{
      float dif=0.5+0.5*dot(N,L);
      float vis=clamp(dot(N,-rd),0.0,.9);
      float fr=pow(1.-vis,5.0)*scol.w;
      float shad=0.5+.5*ShadAO(so,L);
      if(d<0.){shad=.5;fr=0.;}
      col=mix((scol.xyz*dif)*shad+fr*sky(reflect(rd,N),L),col,d/(px*t*2.0));
    }}return col;}
mat3 lookat(vec3 fw){fw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0,1,0)));return mat3(rt,cross(rt,fw),fw);}
void main(){
//gl_FragColor=vec4(fract(gl_FragCoord.xy),0.,1.);return;
//gl_FragColor=texture2D(fbo,gl_FragCoord.xy/res)/32.;return;
  randomize(gl_FragCoord.xy);
  vec2 U=(2.*gl_FragCoord.xy-res)/res.x;
  vec3 ro=vec3(t1.x+c1.x,.8,t1.y+c1.y);
  vec3 rd=lookat(vec3(t1.x-c1.x,-.2,t1.y-c1.y)-ro)*normalize(vec3(U,1.));
  gl_FragColor=vec4(scene(ro,rd),1.);
}
</script>
<script>
let tym=0.,fSpeed=.1,fTurnSpd=1.,fRadius=1.,fDrag=.95,spd=0.;
let U={t1:V2.c(0.),t0:V2.c(0.),c1:new V2(0.,-2.)};
let v=new Array(2),vp=new Array(2);
function path(t,i){t+=i;return new V2(Math.cos(t/2.)*20.*(1.+Math.sin(i*.35)*.08),
 Math.sin(t)*20.*(1.+Math.sin(2.+i*.21)*.08));}
function DE(p){
  let dm=100.;
  for(let i=0.;i<31.;i+=1.){
    let tmp=V2.sub(p,path(tym*.5,i)),d=tmp.mag();
    if(d<dm)dm=d;
  }
  return dm;
}
function trk(pG){pG.fnc(Math.abs);
  let d2=Math.abs(pG.x*2.-pG.y-pG.x*pG.x*0.69);
  let tmp=new V2((pG.x-0.7)*3.3333,pG.y);
  let d3=Math.abs(tmp.mag()-1.0);
  return V1.mix(d2,d3,V1.smoothstep(0.55,0.66,pG.x));
}
function OOB(p){return Math.max(.75,1.-trk(V3.mlc(p,1./20.))*.25);}
function newGame(){
  tym=0.;//time in secs
  v[0]=path(0.,31.);vp[0]=path(0.,31.);
  v[1]=V3.add(v[0],new V2(0.,-1.));//rear
  vp[1]=V3.add(v[0],new V2(0.,-1.));
}
function setup(){
  newGame();
  G("cnv","fragShader",{fboScript:"fboShader",onFrame:draw,fps:40,uniform:U});
}
function draw(){if(G.paused)return;
  tym+=.025;
  let dlt=V2.sub(v[0],v[1]),fw=V2.nrm(dlt);
  dlt.mlc(.45*(dlt.mag()-1.));
  v[0].sub(dlt);v[1].add(dlt);
  for(let i=0;i<2;i++){//verlet integration
    let tmp=new V2(v[i].x,v[i].y);
    v[i].add(V2.mlc(V2.sub(v[i],vp[i]),(fDrag*OOB(v[i])-i*0.01)));
    V2.cpy(vp[i],tmp);
  }
  for(let i=0;i<2;i++){//collision, steering, accel
    let d=DE(v[i]);
    let vel=V2.sub(v[i],vp[i]);
    if(d<fRadius){
      const e=new V2(fRadius,0.);
      let N=V2.sub(new V2(DE(V2.add(v[i],e)),DE(V2.add(v[i],e.yx()))),new V2(d));
      N.nrm();
      if(V2.dot(N,vel) < 0.){vel.rfl(N);vel.mlc(fDrag);}//if moving toward surface bounce
      //v[i].add(V2.mlc(N,fRadius-d));
      vp[i]=V2.sub(v[i],V2.mlc(vel,fDrag));
      //u[8]+=1.;//plAy if(u[8]>0.){buf[i]=16384*u[8]*(fract(0.03*i*i)-.5);u[8]-=.01;}
    }
    if(i==0){
      spd=vel.mag();
      let t=(G.u.mouse.x-.5);
      vp[1].add(V2.mlc(new V2(-fw.y,fw.x),fTurnSpd*spd*t*t*t));
      vp[1].sub(V2.mlc(fw,fSpeed*(G.u.mouse.y-.5)));
    }
  }
  V2.cpy(U.c1,V2.mlc(fw,-2.));
  if(Math.abs(v[1].x)>30. || Math.abs(v[1].y)>30.){
    alert("Game Over!","You disintegrated. Try again.");
    NewGame();
  }
  V2.cpy(U.t1,v[0]);V2.cpy(U.t0,v[1]);
}

</script>
</head>
<body onload='setup();'>
<canvas id="cnv" width='512' height='320'>
</canvas>
</body></html>