<!DOCTYPE html>
<html><head><title>Cool Space</title>
<meta charset="utf-8" />
<script id="fboShader" type="x-shader/x-fragment">
precision mediump float;
uniform sampler2D fbo;
uniform vec2 res;
uniform float time;
#define OPI 3.5
float oSin(float a){a=mod(a,OPI*2.);
  float b=.87,c=.37,pi4=OPI/4.,s=a<OPI?1.:-1.;a=mod(a,OPI);if(a>OPI/2.)a=OPI-a;
  return (a<pi4?a*b:pi4*b+(a-pi4)*c)*s;
}
float oCos(float a){return oSin(a+OPI/2.);}
float octo(vec2 p){return max(max(abs(p.x),abs(p.y)),max(abs(p.x+p.y),abs(p.x-p.y))*.707);}
float rad;
vec2 path(float t,float J){t+=J*.976;t*=2.05/rad;return vec2(oCos(t),oSin(t))*mat2(.92388,.38268,-.38268,.92388)*(rad+sin(J+t*mod(J,16.))*.3);}
void mainImage(out vec4 O, in vec2 U){
  vec2 uv=100.*(2.0*U-res)/res;
  float t=time,dm=250.,c=-1.,ff=1.,r;
  rad=floor(octo(uv)*.5+.5)*2.+.5;
  for(float J=0.;J<64.;J+=1.){
    float d=length(uv-path(t,J));
    if(d<dm){if(dm<.5)ff=.5;dm=d;c=J;r=rad;}
  }
  O=vec4(c,r,t,ff);//jet,radius,time,fudge factor 
}
void main(){mainImage(gl_FragColor,gl_FragCoord.xy);}
</script>
<script id="fragShader" type="x-shader/x-fragment">
precision mediump float;
uniform sampler2D fbo;
uniform vec2 res;
uniform float time;
#define OPI 3.5
float ff=1.,tyme,T,J=-1.,glw=0.,rad=20.5;
float oSin(float a){a=mod(a,OPI*2.);
  float b=.87,c=.37,pi4=OPI/4.,s=a<OPI?1.:-1.;a=mod(a,OPI);if(a>OPI/2.)a=OPI-a;
  return (a<pi4?a*b:pi4*b+(a-pi4)*c)*s;
}
float oCos(float a){return oSin(a+OPI/2.);}
float dot2(vec2 a){return dot(a,a);}
#define RMX mat2(.92388,.38268,-.38268,.92388)*(rad+sin(J+t*mod(J,16.))*.3)
vec3 path(float t){t+=J*.976;t*=2.05/rad;vec2 p=vec2(oCos(t),oSin(t))*RMX;return vec3(p.x,1.75+sin(t*(1.+mod(J,25.)))*.5,p.y);}
mat2 face(vec2 a){a=normalize(a);return mat2(a.y,-a.x,a.x,a.y);}
vec2 rotate(vec2 v, float a) {return cos(a)*v+sin(a)*vec2(v.y,-v.x);}
float jet(vec3 p){
  return ff*max(abs(p.y)-.05+5.*p.x*p.x*max(0.,p.z+.1)+min(dot(p.xz,p.xz)*3.,length(p.xz)*.25),-p.x*p.x-p.z-.05);
}
vec3 rot(vec3 p){
  vec3 p0=path(tyme+.1),p1=path(tyme),p2=path(tyme-.1),p3=path(tyme+1.),p4=path(tyme-1.);
  p-=(p0+p2)*.5;
  p.xz=p.xz*face(p0.xz-p2.xz);
  p.xy=rotate(p.xy,dot2((p3.xz+p4.xz)*.5-p1.xz)*2.);
  return p;
}
void GetJ(vec2 p){//get closest jet
  vec4 O=texture2D(fbo,(p+vec2(100.))/200.);
  J=O.x;rad=O.y;ff=O.w;tyme=O.z;
}
vec3 mcol=vec3(0.0);
float DE(vec3 p){ 
 vec4 z=vec4(abs(mod(p,6.)-3.),max(1.0,2.-T*.1)),p0=vec4(.09,.98,.09,.0);//0.08,1.0,-1.0,.0);
 for (int n = 0; n < 3; n++) { 
  z.xyz=clamp(z.xyz, -1.0, 1.0) *2.0-z.xyz; 
  z=z/min(dot(z.xyz,z.xyz),1.0)+p0;
 }p=rot(p);
 float d=(max(z.x,max(z.y,z.z))-1.0)/z.w;
 float dJ=jet(p);
 d=min(d,dJ);
 if(mcol.x>0.){
  if(d==dJ){
   if(p.y<.024)mcol+=abs(sin(vec3(J,J+.4,J+1.2)));
   else mcol+=vec3(0);
  }
  else mcol+=abs(sin(z.xyz));
 }
 p.y+=0.005;p.x=abs(p.x)-.045;
 float dL=dot2(p.xy)+abs(p.z*.001);
 if(dL<.00025){
   if(mcol.x>0.)mcol.r+=2.;
   else glw+=exp(dL);
 }
 return d;
}
vec3 sky(vec3 rd, vec3 L){
  float d=1.-abs(rd.y);
  return pow(d,8.)*(rd*.5+.5)*(0.4*dot(rd,L)+0.6);
}
float rnd;
void randomize(in vec2 p){rnd=fract(time+sin(dot(p,vec2(13.3145,117.7391)))*42317.7654321);}

float ShadAO(in vec3 ro, in vec3 rd){
 float t=0.01*rnd,s=1.0,d,mn=0.01;
 for(int i=0;i<12;i++){
  d=max(DE(ro+rd*t)*1.5,mn);
  s=min(s,d/t+t*0.5);
  t+=d;
 }
 return s;
}
vec3 rt,up=vec3(0,1,0);
vec3 scene(vec3 ro, vec3 rd){GetJ(ro.xz);
  float t=DE(ro)*rnd,d,px=1.0/res.x;
  for(int i=0;i<99;i++){
    T=t;
    GetJ(ro.xz+rd.xz*t);
    t+=d=DE(ro+rd*t);
    if(t>200.0 || d<px*t)break;
  }
  vec3 L=normalize(vec3(0.3,0.03,0.5));
  vec3 bg=sky(rd,L),col=bg;
  if(d<px*t*5.0){
    if(d<0.)t+=d*2.;
    mcol=vec3(0.001);
    vec3 so=ro+rd*t;
    d=DE(so);
    vec3 N=normalize(rt*(DE(so+rt*d)-d)+up*(DE(so+up*d)-d)-rd*(DE(so-rd*d)-d));
    vec3 scol=mcol*0.25;
    float dif=0.5+0.5*dot(N,L);
    float vis=clamp(dot(N,-rd),0.05,1.0);
    float fr=pow(1.-vis,5.0);
    float shad=ShadAO(so,L);
    col=scol.r>1.1?vec3(1,rnd*.5,0):
      ((scol+N*.3)*dif+fr*sky(reflect(rd,N),L))*shad;
  }
  return mix(col,bg,min(1.,t*t*0.001))+glw*vec3(1,.5*rnd,0.);
}
mat3 lookat(vec3 fw){fw=normalize(fw);rt=normalize(cross(fw,up));
  up=cross(rt,fw);return mat3(rt,up,fw);
}
void mainImage(out vec4 O, in vec2 U){
  randomize(U);J=5.;
  vec3 ro=path(time*1.4-2.),rd=lookat(path(time*1.4)-ro)*normalize(vec3(U-res*.5,res.x));
  ro.y+=.25;
  O=vec4(scene(ro,rd),1.0);
}
void main(){mainImage(gl_FragColor,gl_FragCoord.xy);}
</script>
<script src="WAG.js"></script>
<script>
function scale(note){//throws out dissonant tones 
 let n2=note%12; 
 if((n2==1)||(n2==3)||(n2==5)||(n2==8)||(n2==11))note=0;
 return note;
}
// note number to frequency  from https://www.shadertoy.com/view/ldfSW2 
function ntof(n0){
 let n=scale(n0);
 return (n>0?440.0 * Math.pow(2., (n - 67) / 12.):0.);
} 
function I(n, t){
  let f=ntof(n);
  if(f==0)return 0;t=Math.pow(t,.999);
  return (1.-t)*((t*f)%1.);
}
var N=[0,1,2,3,4,5,6,7];
function song(k){with(Math){
  let tim=k/750.;
  let bt=floor(tim),t=tim % 1.;
  let n1=N[floor(bt/64.) % 8];
  let n0=n1+N[floor(bt/8.)%8],n=n0+N[floor(bt)%8],n2=n0+N[floor(bt/2.)%8],n4=n0+N[floor(bt/4.)%8];
  let v=I(n+12,t+=pow(1.-(tim % 1.),20.0))*.75;
  v-=I(n2+24,(tim/2. % 1.));
  v+=I(n4+31,(tim/4. % 1.));
  v-=I(n0+24,(tim/8. % 1.));
  return v*.2;
  }
}
function setup(){
  A([{samps:120000,fill:song,sampleRate:6000,echo:1024}]);
  plAy(0,{loop:true});
  G("glcanvas","fragShader",{fboScript:"fboShader"});
  togglePause();
}
</script></head>
<body onload="setup();" bgcolor="gainsboro" style="font-family:sans-serif;">
<div style="touch-action: none;">
<canvas id="glcanvas" width="512" height="320"></canvas></div>
<br><button onclick='togglePause();if(this.textContent.localeCompare("Play")==0)plAy(0,{loop:true});
 else if(G.paused)this.textContent="Resume";else this.textContent="Pause";'>Play</button>
<button onclick='fullScreen(document.getElementById("glcanvas"));'>Full Screen</button>
</body>
</html>
